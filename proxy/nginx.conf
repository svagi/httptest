user                      nginx;
worker_processes          auto;

events {
  worker_connections      1024;
  use                     epoll;
  multi_accept            on;
}

http {
  charset                 utf-8;
  server_tokens           off;

  # Default MIME types
  include                 mime.types;

  # Default SSL/TLS
  include                 ssl/default.conf;

  # API container
  upstream API {
    server                api:8080;
  }

  # WWW container
  upstream WWW {
    server                www:9090;
    keepalive             8;
  }

  # Proxy cache of WWW container
  proxy_cache_path        /var/cache/nginx keys_zone=WWW_CACHE:1m levels=1:2
                          use_temp_path=off inactive=1d;

  # Default cache policy based on content type
  map $sent_http_content_type $expires {
    default               off;
    ~html                 1h;
    ~css                  max;
    ~javascript           max;
  }
  expires                 $expires;

  # Redirect non-www to www with SSL/TLS (production only)
  server {
    listen                80;
    listen                443 ssl http2;
    server_name           httptest.net;
    return                301 https://www.httptest.net$request_uri;
  }

  # Redirect all subdomains to SSL/TLS
  server {
    listen                80 default_server;
    return                301 https://$host$request_uri;
  }

  # Main server with SSL/TLS only
  server {
    listen                443 ssl http2 default_server;
    gzip_static           on;
    gzip                  on;
    gzip_comp_level       5;
    gzip_types            text/css text/event-stream application/javascript;

    location = /favicon.ico {
      empty_gif;
      access_log              off;
    }
    location /static {
      alias                   /www/static;
      access_log              off;
    }
    location / {
      proxy_pass              http://WWW/;
      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_http_version      1.1;
      proxy_set_header        Connection "";
      proxy_cache             WWW_CACHE;
      proxy_cache_valid       1h;
      proxy_cache_revalidate  on;
      proxy_cache_use_stale   error timeout http_500 http_502 http_503 http_504;
      add_header              X-Cache-Status $upstream_cache_status;
    }
  }
}
